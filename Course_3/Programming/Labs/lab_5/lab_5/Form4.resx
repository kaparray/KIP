<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEAAAAAAAD/7gAOQWRvYmUAZAAAAAAB/9sAQwAGBAQEBQQGBQUGCQYFBgkLCAYG
        CAsMCgoLCgoMEAwMDAwMDBAMDg8QDw4MExMUFBMTHBsbGxwfHx8fHx8fHx8f/9sAQwEHBwcNDA0YEBAY
        GhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA
        ogCkAwERAAIRAQMRAf/EABwAAAIDAQEBAQAAAAAAAAAAAAACAwQFBgEHCP/EAE0QAAIBAwICBgQICwUF
        CQAAAAECAwARBBIFITFBUWETFAaBIjJScZFCgiMzkxWhYnKSU3Oz0yQ0B6LSFjYXskNjg6PwscHRtCVF
        lQj/xAAZAQEBAQEBAQAAAAAAAAAAAAAAAQIDBAX/xAAyEQACAQIEAwYFBAMBAAAAAAAAAQIRMSFREgPw
        QZFhgeEyEwRxobHRIsHxUpJiQ4Ny/9oADAMBAAIRAxEAPwD9U0AUAUAUAUBU3Ld9s2yJZc/JTHVzpjDn
        1nb3UUes7dii9ajBysjMpqN2YkvnDKmuNs2uR1+TkZreFjPwJaSf0NGtdPSSu+mPgcH7jJdcPEqybh5o
        yBaTPhxFPRiQDWOzXO0yn7MVfwVlX4+Bh7k3zoQNj5spvk7pmzddpu4/9MIaa8kuPiZxd2+PgIdsibg+
        Tmup5q+dlsp+FWlIq+o+zovsTT2vqzwbVAvsZGZGOkR5uWg+JZQKeo+zohp7X1Y4xMiPjBuOdEes5Mk3
        4JzKKnqZpdPsXHk31PJ938xbcgZd08W7tpigycaOR5GtfQnhzidXM8AOJ4A0rB3XR/eppTmufXwoWtu8
        67qYdW47RcozRytgTCbSyMQSUmEDW4XGksar2o8n1NR9w+a6G/tnmDZ9zZkw8lXnQXkxnDRzoOt4ZAsi
        j4VrlLblG53huRlZmhWDYUAUAUAUAUAUAUAUAUBy+6eZsvKnlwtjZVWJjHlbo41ojrwaOBOUjryLH1VP
        D1jdR3jtqKrLp9zzT3m8I9TPxtux4ZWyDqnzHFpMyc95Mw52LnkvUq2UdApKbeHI4qPPmWqwaCgCgCgC
        gKuXmiErDEnfZcgPdQA2uB8pzx0oOlvQLmwIHmJhGKRsid+/zHGlpbaQq3vojXjpX03PSTQEsLY/fTRx
        i0isGlAFuLKLH4hVdSIxfNfmDyXtCwnzHuGNt7lXkxJJpRDMNGkM0LAiQMNY4pxqxm42Lo1G3tvmbL22
        KN9wmOfszqGTcrDvoUIurTBQBJH/AMQC4+UDxataFO2EsszUd1x82KzOyVldQykMrC6sOIIPSK856z2g
        CgCgCgCgCgCgMPzfm5MG2x4uK5iyNxmXESZeDRqVaSVlI5MIo30n3rV12kq1fLE478mo0XPAyYIIceBI
        IUEcMShY0HIKOAFG23VnnSoSVChQBQBQBQFPKzJO98LhqJMsgFi1+7iU8nkt+BQbt2C7ACTEw48YMQzS
        TSG8s72LuRyvawAHQBwFAWKAhCQLls+r6eWNVK34lIyTcDsMnGrV0JzOLGySbr/V+fdM7BY4GxbTFj7b
        PNEe6bKzJXeZ4XYaWZIo1RtPK/HnWTpX8TuqpgseTpmx5czZTc4+KI58G/yYZywMQ7I3ja3UrKOitbuK
        Uup09u6VjkdNXE9IUAUAUAUAUAUBw/nncJY9+2sKQMTbvp9x5XC5erHha/QFZWLdlerZhWDzdu7E8XuZ
        fkslfvwLVcQFAFAFAFAUJsqbJlbFwW0lTpyMuwZY+tUB4NJ2HgvM+6RTL2/CiiilVJJheecse+luT3rC
        5OribCuiijLZZ7gfpZ/t5f71NKJUO4H6Wf7eX+9TShUibBDZUeR30940ePT30vHWUN76vxKtFShOdSXu
        B+ln+3l/vVNKLUO4H6Wf7eX+9TShUg8sbi8Pn9VWR3w5oDt7a3dx4mxyR7TH2UTT8LWrtPbXpV537rE2
        tx+p2W77n0+vCfQCgCgCgCgCgCgOKhEW4T7rlyqJIczIkgVGFwYcceG08eas0bv86vW/xSWX7nj8zbz/
        AGM8TTbJaDL1y7UoAgzjd2iHuZB4nSOiTq9q3tMlDXir5fb7HLy3txc1UdJEV0YOjC6spuCDyIIrg0dB
        qAKAzjNLuJMeM7RYI4SZSkh5OgpCegdcg+bx9YCl6GGKGJYokCRoLKiiwAoQxsT2Jf18/wC2euqMsnqk
        CgIMiB5JcZ1I+hl1sD0gxunDn79VO5GieoUxczeJMkti7SwZ76Zs4WaKLoIXoeTs5D5XUe8NrnI5ynXB
        FeSMbbhRzYqktt8iZiAm7O0Mgma5PEtJYhj03rr5nR88DPlVVyxPscUscsaSxsHjkUMjDkVIuCK+S1Q+
        snUagCgCgCgCgKG/bi23bNm5qDVLDExhT3pSLRp85yBW9uOqSRjclpi2YW34K4W342Gp1DHiSLUebaVA
        1HtPOu0pVbZ54xoqEzLUKY8mwpCxk2uZtvkJu0SANjsT70J4C/SUKk9Jrprr5sfqcnt5YCeL3vG4ZWCu
        Uo4CbCcXI95opimn4Fd6y9uLs+pKyV10M9t/2zPZlzZjg7eCVMeUr45nIuDqaQKvddgPrdPC4MexPKvz
        HqxN3GysPIQHFmjlQDgYmVhb5prm4tXNJp2JqhTDxPYl/Xz/ALZ66oyySWaGJdcrrGvvMQo+M1UqkbKL
        eYdmBITKSdhzTHvOw+FYg5rotqWRj1I5lPN3ncJoGGBgyqylXWXIZYQwVg2kKC0nrWtZgvw10jspPFmZ
        TbshJMTKy7/eOSZozzxYh3UFvxluzv2hmK9lbVI2RGm7lpEREVEUKiiyqosAByAAqGj0gEWPKgO28gZZ
        m8sY0Dm8m3l8J78TpgbTET2tFob014vcxpN9uJ7fbSrBdmB0VcDuFAFAFAFAc/5qczT7Xto4ifI8VOP+
        Fh2kB9E5hrvs4JvjHwqcN51ouMPGgEUIIRQgjLVIRSFURnY2VQSx7BVRGUtqjZNqw0YWZYIww7QgvW5v
        8mYgsERZOybPkNqyMHHmbnqkiRj+EGqtySsyOEXdFc+XdjHs4MKD3UUIPiWwq+pLMz6ccjFx9j2kpJqx
        Y2HfTCzC4sJWFiDXRTZHtxyJU2XaI21x4OOjj5SxID8YFa1yzJojkWCoAsBYDkKyaI5FYowU2ax0k9fR
        VRlkOO7SY8UjgqzorMpFiCRcgitO5FYkqFCgN3+n+V3O87jgE2XKjjzYh1vHaCY/m9zXD3MaxT7uPmdv
        bSpJrPHj5Hd14j2hQBQBQBQHMyN4rzLnz848GOLCj7JGHiJiOxlkiHza9Cwglnj+n3PM8Zvsw/X7Fois
        lIyKoEIoQz97H/tGaB7TwyIv5TKVUfGa3t+ZHOflZZK1DQhFCEbLVIYWMPUl/Xz/ALZ66xsRjkVoyIRV
        IRkUBXx5TNGXItZ5Et+rdkv6dNaaoZTqORQHlAS7bl+B3/asy9k78Ys1ulMr6ID7Uxt6KzONYtcYFhKk
        k+MT6nXzT6QUAUAUAskiRxtJIwWNAWdjwAAFyTRINnM+X1kba48mUFZs5nzJVPAqclzKEP5CsE9Fejc8
        1MsOh5tu1c8S+RWDQhFUhGRVBn7ut8eJBxZ8jHsOvTMjH+yprcL9zOc7FplrJo4bzd56GyeefLWxyZWL
        iYG4x5uTumRlssemKCMCEI7MqgvK3TfgKjeJVHAXC88ru39R02DZsrFzdmx9qbPz8rHZZrTvOIoYhIjF
        R6oZiOdWuJHHA1sUepL+vn/bPXdWMMciqZEIqkEIqkK8ciO8yKpBhfQ3CwJKq9x+fVIj0igFIqkK+dA8
        +HNCjaJHQiN/de3qt81rGrF0ZmSqj6ftm842XsGNvDkRQS4y5MpPyAU1uD+TxvXzdyOmTWR9Lblqinmf
        NNv/AP0HDnJsc0XlDefD+ZVlXYX/AITvMmeFdTIsXfhkj08e9eydPLjWDZpf60w/4W+9vuDL+9fvz/DP
        3J32N3n3l3nd934jvO406uGrVa/DtoD6TQGN5udm2ZsJDaTcpI8EW56J2tMR2rDrb0V12fNXLHjvOW8/
        xpnhx3EukAWAsByFQCkVSCEUIIRVIZ24C+btqjiRO7kfiiCQX5e8wrcbPjmYldFoismj5/J5Ifd/6o7p
        vm/bXBk7NjbXi7ftByVhnWR2lefIcRnWUKMVW7KL9F6lMS1wPPI3kyfZ/OPnDdm22HbcHcZcSDaoYBEq
        nHxYLNIEiPq65ZGNmAPZVSxJJ4I3MUepL+vn/bPXdHNjkVoghFCCEVSFdRAJ5VThMQryDjyN1U9XyK1y
        M8z0ioUQiqQUiqQv4eLu+8/068zeWdplih3Vo8rEwZchmSNFz4y6yMyLIwCNM4Wy/Jrye6j+SeaPV7WX
        4tZMubd/TvMw/NnlPN72A7H5T2OXbcKEFu+8XMIYmkC6dITuILX1XueVeY9Jh/6S+Yv9IP8ADXicP/F/
        3h99eP1y+G8f94+N1d53fe20fR6u7v2UB9YoDB3I+K8zYePzj27HfLkXqlyCYIG/MWcV2jhBvPDj5HCe
        M0ssePmXSKwaEIqgUiqQQihDOmGrese3HRjzluws8Wn/AGWrovK/iYfmLRFZNEM8kUMbSSusca+07kKo
        +EmqlUyyBMzCliaWKeOSJL6pFdSosLm5BtyquLRnUjn9r3Db8tZxiZUWQVmmLCJ1ewaZ7E6SeddtLSxR
        lSTsyZMnFkcpHMjupIZVYEgjmCAatGKoYigEIoQrvDF4lZr2kKFAtxxFweXZWq4GaYjEUBGRQCEVSGj5
        OyvC+ahEeEe5YzRE9cuMTJGPzHlPornvqsPg/rwjew6T+K4/U+iV4D3hQBQHP7N/EZG57kePisp44j1R
        Yv8ADgDsLxu4/KrvPBJZL64nCGLb7fpgaRFczYjWAueA66pDGyPMeHHm+FjgyJ2U2lmSPTEnC99chjD/
        APL1V0UMK1Rye6k6FHO3bd3yR4NoIcUW1d5G0kjddiHRV+I1YqNMbnOW5KuBlZj5Gfus7PPNEiQxIRjy
        PDc6pG4tGVfgCOTVtOkTlJtskzII82FYMxRlQoQVjm+kW4BANnvc2POsxk06oSxuImNBHAMeONUgXgsK
        qAg434KOFVybdSU5HixRoLIoUc7AW4+ilSUMjGHqSfrp/wBq1bRGAx4Vl75Y1WUcO8AAbj2863VkoRti
        wHKGVotk3B74XDEqLC5HPhw41dTpQlMajZEmdI6umZLAyi30fdkEdquriidORXJ5kM+852TlQvhQxSR4
        rMZZHZkV2KlNCMA/In1ja17Dne1i1zLKbwNJt4xY8dJcjVGxsJFRXl0kjjxRb6R12qJVeBr1FTEsQT4+
        TCs+PIssL30yIQymxseI7aNNXNpp2AigK8+T4GXG3Ll93zx5LnqiU6Zv+izitJVqszLdKPI+tV8s+mFA
        Ut7zzt+0ZeYo1SQxM0KH5clrRp857Ct7cdUkjG5LTFsg23BTbtrxcMNdcWFIzIeGrQoBY9p5mrOWptmY
        x0pLIyW8yzyZksWPhsuLHqXxczaC7g2+jisWKc/WYr2AjjW3BJXxOL3scEZLYcT5j5spabJYkrJKzP3Y
        b5MQYkRrxtZQO2ta3SnI4tVdSQisgQiqClhi8+c3Q04CnsWKNT/aBrcrIwuZZIrJoQihBSKpDFxh6kn6
        6f8AbNXREZIRVIRsQoLMbAcSTyAqkKB7zP8AZ1R4PS3FXm/J6VTt5t0cOLS5bFoIqKFQBVUWVQLAAcgB
        WjJ4RQgkokaIxrLJEDY6o2KEEG44iqnQE0G5SY2IfFtJlOn+8RBrZb9KrYEge6PRWrvI1HcosS5HLiZ+
        IWidZseUFSRyIPBgeo9BFMUzommjvvJec+Z5YwHkYvPAhxchjzMuMxhdj+UU1emvDvxpN8XPbsSrBcWN
        uuJ2MLzNlQDI2vBmcJHNkjJm1G30eJaRbdviDCtu2u20sG+z6+FTjuyWC7fp40MbJbNydxlysjJYwi6Y
        uIl0jRPecA/SSN1ngOgDiTaqlEjzybbqBFQgpFAKRVIKRQhR2wfwrN0PNOwPWGmcqfirc7mY2LJFZKKR
        VAhFCGLij1JP10/7Zq6IjPZ5YoYmllYJGguzHkK0ZoUu5kziHyFKYo4x4zc3/GlB/An53HgsLYtkVoyc
        ll/1DwIt0ztuxtq3TcX26QQ5U+Fi99EshRX06g17gNxFqxrOnpOlao19h37bd+2xNx252bHdmRlkRo5E
        eNiro6MAVZWFiK3GVTnKLToy+RVMikUIK2RmwxEYhTXcMEkB0njci44jV19HUa0qcy6mrHZ/013Au+44
        bqYjL3WfHExBK96vdSoLEj1Xh1G3vVw91Gz7j2+0ldd53NeM9hwm9QRbl5ykynJaLZYhiwRn2RkTKJpZ
        PhEboo9NepS07dP5Ynh3fy3K/wASxXIHhFCCkVQKRQCOVVSzGyqCSewVSFTa0ZNrxFYWYQxhh26RetTf
        5MzGyJyKhRSKEFIqg5+KeHH26B5OlECqouzMVvZQOJJrorEaxFixpZpFycsWZTeDHBusfa1uDP28hyHS
        SIyyRWjIj2ALE2A4knkBQHxHa4/PMPkTdPOmx7v4eLcsvL3ebbPCxPIYTMysySyBjqEMYZQVtwriq0qj
        0vTqUWj6Z5H2vaNv8r4S7TNJlYeSnixlzEGWZsk960khAHrMWrrBJLA8+423ibZFbMCkUIKRQhd8sZ0u
        B5s2yYEmHJMmDMtwABOAytx6RJCg9JpuKsGu867EtM10PrtfOPqnCbePWzy31hz83XfnwyZAl/mBbdle
        jc5fBfQ8Cu/i/qWiKwUWgPCKEFIqgpbxf7rywPaaF1X8plIH4TW9vzIzOzLOkAWHADorJRSKEEIqgq5m
        WmOFUKZJ5LiGBbanI58+QHSTwFBQx8PZdxh0STiGbIRQiNrYLGoFtKDu+H4zc2+CwGlIjLRxdx/Rw/aN
        +7q6iUFONuH6OH7Rv3dXUShG+JnMpVooWVhZgZGIIPX9HTUKEMe1zQ4y4sOLjR4yroWBGKxhfdCiO1qa
        iCwbbkY0CQY2NjwQRi0cUbFEUdQVYwBVUgxjjbh+ji+0b93V1EoIcfP/AEcX2jfu6aiUQpx8/wDRxfaN
        +7q6iURWzY9xigMyJGssDJNAwkYkSxsHjIBT31FahLGhGfca+cfZOM3OD7u8xzI3DG3f+Ixm6PERoEmj
        9KIsg6/X6q9HmjX+PHHcePcWmf8A6HrmQ8IqkFoDwihCjuovjxqOJaeAAdYEysf7INbhfuZmVi0RWTQp
        FUhTy8tkcY+Ooly3GoIeCopuA8hF9K8DbpPR02Ch5i4QgLyOxlyZbd9OeBNr2VRx0ot/VX/vJJIjJiKp
        BSKoEIoQUiqQQihBCKAQiqQUiqQQigJNo29t03/DwlF4cd0zM1uhY4m1Rqe2SVQLdKhuqq3pi33G9qGq
        aWWJ9SrxH1ClvG0Ym7YL4mTqUEh4pksJIpEN0kjJBsyn/wAjwrcJuLqjE4KSozkVmzMLLXbd3ATMJIxs
        lRphylAvqjvfS9vajJuOi68a6yimqxt9Dx4xdJfuW65mjwiqQWgKWcL5WAvO0zMR2CGQX+NhW42ZiV0W
        iKyaKGRlSySti4VmmXhPMeKQ3Fxf3ntxC+k2BFwoS42HFjRlUuzOdUsrcXdzzZj1/gA4CwFqEZIRVIIR
        VApFCCkVQIRQgpFUghFCCEUAhFUhEq5eVlrgbdF4jPcX0XtHEp/3kzi+hPwnkoNbSVKuwUXJ0Vz6D5c8
        vY+yYJhR++ypm7zMymFmlkIte3HSqjgq9A7bmvLubmp9h9Ha2lBUNWuZ1CgK+4bdg7jiviZsKz4721Ru
        OkG4IPMEHiCOIrUZOLqjMoqSozl8vYN82y7YLHdsIcseVlTMQdSSNpSb55VutmNdlKMr/i/l4Hmlsyjb
        FfMqY26YWRKccMYstBeTEmVop1HWY3CtbttapLbax5HNSTw5loislKUovu+P06IJi3YWeLT/ALJra8r+
        Jl3IpJ5sx2gw20QISk+YOsXDJD0FgfabkvLib6cGizBjQ48SxQrpjW9hz4k3JJPEkk3JPEmqQYigFIqk
        FIoQQiqBSKEFIqgQihBSKpCrk5mNA6RyP9NJ9VAgLyuR0JGgZ3+aK1GLdiNmlt/lXfdzIbJvtOEed9L5
        bj8VfWji+FtR/FFR7kY/5P5HWHt5SvgvmdntOzbbtOL4bAhEUZOqRrlndul5Ha7Ox62Neec3J1Z7Ybai
        qIu1g2FAFAFAFAVNx2nbNziEW4YsWUim6CRQxVveU81PaK1GbjZmZQUroxZvJskXHbNymxx0QZQ8ZEPS
        7LP/ANWunqp3XTDw+Rwft8n+vj8zCzvLfm4ZryS48WVhvEkci4MwWaTQzm1p+5WNTr42kJ4cxW6waonT
        4+Bz9KadaV47R/GJiosc+Dl4aoNIVsWXu1CjgO8jV4gPnU9PJp95lul0+gse97LK+iPPx2k9wSpq49a3
        vR7clyZnXHMtBldQyEMp5EG4rBo8IoBSKpBGsASTYDmTQhSm3jaIW0zZ2PG3QrSoD8RNdFtydkzLmsz1
        Mvv+GLi5WTfk0ONMyH/maRH8bU0NXou8qq7J9C3FsvmnJ+q25MVels2dVNusLAMi/wABK1KwV308aG1s
        zfKnx4Zo43kSaSx3Pc5JF+VBhoMZCOouTLL6Vday95Ky64nSPtc2b+17FtG1Ky7fiRwM9u8lAvI9umSR
        ru57WJrlPclK7PRDbjGyL1YNhQBQBQBQBQBQBQBQBQBQGdvv8of5Pkf576vlXTbvz7jnuW5d587z/wCZ
        b/I3M/zH1nRz/wDGvbG3+08Ur/6ih1/5e5n6j6rn8j8Xqrf9jn/QP/ofncvTT+w/oW8b60f5E5j6v2uf
        RWX/ANTa/wCR9D8vfy5/kOX/AMf7HtH/ALfDXi3b8+89u3bl3GtXI6hQBQBQBQBQBQBQH//Z
</value>
  </data>
</root>